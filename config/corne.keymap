/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        PasteSpecial: PasteSpecial {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp V>;
            label = "PASTESPECIAL";
        };

        Borders: Borders {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp B>;
            label = "BORDERS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q  &kp W  &kp E  &kp R      &kp T            &kp Y           &kp U      &kp I      &kp O    &kp P     &trans
&trans  &kp A  &kp S  &kp D  &kp F      &kp G            &kp H           &kp J      &kp K      &kp L    &kp SEMI  &trans
&trans  &kp Z  &kp X  &kp C  &kp V      &kp B            &kp N           &kp M      &kp COMMA  &kp DOT  &kp ESC   &trans
                      &mo 1  &kp SPACE  &kp BACKSPACE    &kp LEFT_SHIFT  &kp ENTER  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp LC(W)  &kp LC(O)  &trans     &trans     &trans          &kp LC(H)       &kp HOME        &kp UP_ARROW  &kp END      &kp LS(SPACE)  &trans
&trans  &kp LC(A)  &kp LC(S)  &trans     &kp LCTRL  &kp LEFT_ALT    &kp LC(F)       &kp LEFT_ARROW  &kp DOWN      &kp RIGHT    &kp LC(SPACE)  &trans
&trans  &kp LC(Z)  &kp LC(Y)  &kp LC(X)  &kp LC(C)  &kp LC(V)       &PasteSpecial   &Borders        &kp LS(F2)    &kp PAGE_UP  &kp PAGE_DOWN  &trans
                              &trans     &kp SPACE  &kp DEL         &kp LEFT_SHIFT  &kp ENTER       &mo 3
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3    &kp NUMBER_4  &kp NUMBER_5     &kp NUMBER_6      &kp NUMBER_7       &kp NUMBER_8  &kp NUMBER_9   &kp NUMBER_0      &trans
&trans  &kp GRAVE     &kp TILDE     &kp POUND       &kp DOLLAR    &kp PERCENT      &kp MINUS         &kp PLUS           &kp EQUAL     &kp QUESTION   &kp SINGLE_QUOTE  &trans
&trans  &kp F8        &kp F9        &kp F10         &kp F2        &kp F4           &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SLASH     &kp BACKSLASH  &kp ESCAPE        &trans
                                    &kp LEFT_SHIFT  &kp SPACE     &kp BACKSPACE    &kp TAB           &kp ENTER          &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &bt BT_CLR    &kp C_VOLUME_UP  &kp LA(LS(LEFT_ARROW))  &kp LG(UP_ARROW)    &kp LA(LS(RIGHT))    &trans  &trans
&trans  &trans        &trans        &trans        &trans  &trans        &kp C_VOL_DN     &kp LG(LEFT_ARROW)      &kp LG(DOWN_ARROW)  &kp LG(RIGHT_ARROW)  &trans  &trans
&trans  &to 4         &to 5         &trans        &trans  &trans        &kp K_MUTE       &trans                  &trans              &trans               &to 0   &trans
                                    &trans        &trans  &trans        &trans           &trans                  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &to 0   &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &to 0   &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
